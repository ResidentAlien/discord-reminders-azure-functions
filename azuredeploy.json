{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "String",
      "metadata": {
        "description": "The name of the reminders app that you wish to create."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "nameSuffix": "[uniqueString(resourceGroup().id)]",
    "uniqueAppName": "[if(greater(length(concat(parameters('appName'), variables('nameSuffix'))), 24), substring(concat(parameters('appName'), variables('nameSuffix')), 0, 24), concat(parameters('appName'), variables('nameSuffix')))]",
    "functionAppName": "[concat(variables('uniqueAppName'), '-funcapp')]",
    "functionAppHostingPlanName": "[if(greater(length(concat(variables('functionAppName'), '-plan')), 40), substring(concat(variables('functionAppName'), '-plan'), 0, 40), concat(variables('functionAppName'), '-plan'))]",
    "storageAccountName": "[variables('uniqueAppName')]",
    "applicationInsightsName": "[concat(variables('uniqueAppName'), '-appinsights')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-12-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('functionAppHostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "linux",
      "properties": {
        "name": "[variables('functionAppHostingPlanName')]",
        "computeMode": "Dynamic",
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('functionAppName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppHostingPlanName'))]"
      ],
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppHostingPlanName'))]",
        "siteConfig": {
          "reserved": true
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2019-08-01",
          "name": "appsettings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('microsoft.insights/components', variables('applicationInsightsName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "WEBSITE_NODE_DEFAULT_VERSION": "~12",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
            "FUNCTIONS_WORKER_RUNTIME": "node"
          }
        }
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "East US",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('applicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    }
  ],
  "outputs": {}
}
